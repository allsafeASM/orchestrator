import logging
import traceback
import azure.functions as func
from database.db_manager import DatabaseManager

app = func.Blueprint()

@app.activity_trigger(input_name="payload")
async def update_vulnerability_scan_progress(payload: dict):
    try:
        vulnerability_scan_id = payload["vulnerability_scan_id"]
        progress_percentage = payload["progress_percentage"]
        logging.info(f"Updating vulnerability_scan_id={vulnerability_scan_id} to progress={progress_percentage}%")
        
        db_manager = DatabaseManager()
        result = await db_manager.update_vulnerability_scan_progress(vulnerability_scan_id, progress_percentage)
        
        if result.get("success"):
            logging.info(f"Successfully updated vulnerability_scan_id={vulnerability_scan_id} to progress={progress_percentage}%")
        else:
            logging.error(f"Failed to update vulnerability_scan_id={vulnerability_scan_id}: {result.get('error')}")
        
        return result
    except Exception as e:
        logging.error(f"Exception while updating vulnerability_scan_id={vulnerability_scan_id} to progress={progress_percentage}%: {str(e)}")
        logging.error(traceback.format_exc())
        return {"success": False, "error": str(e)} 